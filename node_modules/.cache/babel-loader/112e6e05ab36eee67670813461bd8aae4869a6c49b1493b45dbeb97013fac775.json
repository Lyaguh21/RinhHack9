{"ast":null,"code":"var _jsxFileName = \"/home/the-goose/pivo2/my-react-app/src/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main(props) {\n  _s();\n  const al = ['А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ж', 'З', 'И', 'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У', 'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ы', 'Э', 'Ю', 'Я'];\n  function indexConvert(tableIndex) {\n    let normIndex = [0, 0];\n    console.log(normIndex);\n    if (al.includes(tableIndex[1])) {\n      if (al.includes(tableIndex[2])) {\n        normIndex[0] = toString(parseInt(normIndex[0]) + (parseInt(al.indexOf(tableIndex[2])) + 1) * 3);\n        console.log(props.height, props.width);\n      }\n      normIndex[0] = toString(parseInt(normIndex[0]) + (parseInt(al.indexOf(tableIndex[1])) + 1) * 2);\n      consol.log(normIndex);\n    }\n    normIndex[0] = toString(parseInt(normIndex[0]) + parseInt(al.indexOf(tableIndex[0])) + 1);\n    for (let i = tableIndex.length; i > 0; i--) {\n      if (al.includes(tableIndex[i - 1])) {\n        normIndex[1] = tableIndex.slice(i);\n        break;\n      }\n    }\n    return normIndex;\n  }\n  console.log(indexConvert(\"В24\"));\n  var cell = \"<input type='text' class='cell'></input>\";\n  const [tableList, setTableList] = useState();\n  let tableElements = document.getElementsByClassName('cell');\n  function setCell(tableIndex, value) {\n    let currentTable = tableList;\n  }\n  cell = cell.repeat(props.height * props.width);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"table\",\n    dangerouslySetInnerHTML: {\n      __html: cell\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n}\n_s(Main, \"WRxjFnShFvxKpbSXE8WtV1hzXfY=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Main","props","_s","al","indexConvert","tableIndex","normIndex","console","log","includes","toString","parseInt","indexOf","height","width","consol","i","length","slice","cell","tableList","setTableList","tableElements","document","getElementsByClassName","setCell","value","currentTable","repeat","id","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/the-goose/pivo2/my-react-app/src/Main.js"],"sourcesContent":["import React, {useState} from 'react'\nfunction Main(props){\n\tconst al = ['А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ж', 'З', 'И', 'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У', 'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ы', 'Э', 'Ю', 'Я'];\n\tfunction indexConvert(tableIndex){\n\t\tlet normIndex = [0, 0];\t\n\t\tconsole.log(normIndex);\n\t\tif(al.includes(tableIndex[1])){\n\t\t\tif(al.includes(tableIndex[2])){\n\t\t\t\tnormIndex[0] = toString(parseInt(normIndex[0]) + (parseInt(al.indexOf(tableIndex[2])) + 1)*3);\n\tconsole.log(props.height, props.width)\n\t\t\t}\n\t\tnormIndex[0] = toString(parseInt(normIndex[0]) + (parseInt(al.indexOf(tableIndex[1])) +1)*2);\n\t\t\tconsol.log(normIndex);\n\t\t}\n\tnormIndex[0] = toString(parseInt(normIndex[0]) + parseInt(al.indexOf(tableIndex[0])) +1);\n\tfor(let i = tableIndex.length; i > 0; i--){\n\t\tif(al.includes(tableIndex[i-1])){\n\t\t\tnormIndex[1] = tableIndex.slice(i); \n\t\t\tbreak;\n\t\t}\n\t}\n\treturn(normIndex);\n\t}\n\tconsole.log(indexConvert(\"В24\"));\n\tvar cell = \"<input type='text' class='cell'></input>\";\n\tconst [tableList, setTableList] = useState();\n\tlet tableElements = document.getElementsByClassName('cell');\n\tfunction setCell(tableIndex, value){\n\t\tlet currentTable = tableList;\n\n\t\t\n\t}\n\tcell = cell.repeat(props.height * props.width);\n\treturn(\n\t\t<div id=\"table\"\tdangerouslySetInnerHTML={{__html: cell}}> \t\n\t\t</div>\n\t)\n}\nexport default Main;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}