{"ast":null,"code":"var _jsxFileName = \"/home/the-goose/pivo2/my-react-app/src/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Main(props) {\n  _s();\n  // алфавит  для букавок\n\n  const al = ['А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ж', 'З', 'И', 'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У', 'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ы', 'Э', 'Ю', 'Я'];\n\n  // из индекса таблицы(типо \"Б8\") делает масивчик с индексами этой ячейки в массиве tableElements(типо \"[2, 8]\")\n\n  function indexConvert(tableIndex) {\n    let normIndex = ['0', '0'];\n    if (al.includes(tableIndex[1])) {\n      if (al.includes(tableIndex[2])) {\n        normIndex[0] = ((parseInt(al.indexOf(tableIndex[0])) + 1) * (al.length * al.length) + (parseInt(al.indexOf(tableIndex[1])) + 1) * al.length + parseInt(al.indexOf(tableIndex[2]))).toString();\n        normIndex[1] = parseInt(tableIndex.slice(3)).toString();\n        return normIndex;\n      }\n      normIndex[0] = ((parseInt(al.indexOf(tableIndex[0])) + 1) * al.length + parseInt(al.indexOf(tableIndex[1] + 1))).toString();\n      normIndex[1] = parseInt(tableIndex.slice(2)).toString();\n      return normIndex;\n    }\n    normIndex[0] = (parseInt(al.indexOf(tableIndex[0])) + 1).toString();\n    normIndex[1] = parseInt(tableIndex.slice(1)).toString();\n    return normIndex;\n  }\n\n  // из нормального массивчика с индексами делает табличный формат, как предыдушая функция, только наоборот короче\n\n  function indexTabler(normIndex) {\n    let tableIndex = \"\";\n    if (normIndex[0] > al.length * al.length) {\n      tableIndex = (~~al[parseInt(normIndex[0]) / (al.length * al.length) - 1]).toString() + (~~al[parseInt(normIndex[0]) % (al.length * al.length) / al.length - 1]).toString() + al[parseInt(normIndex[0]) % (al.length * al.length) % al.length - 1].toString() + normIndex[1];\n      return tableIndex;\n    }\n    if (normIndex[0] > al.length) {\n      tableIndex = (~~al[parseInt(normIndex[0]) / al.length - 1]).toString() + al[parseInt(normIndex[0]) % al.length - 1].toString() + normIndex[1];\n      return tableIndex;\n    }\n    tableIndex = al[parseInt(normIndex[0]) - 1] + normIndex[1];\n    return tableIndex;\n  }\n\n  //пока не уверен в нужности этого \n  let tableList = [];\n  for (let i = 0; i < props.width; i++) {\n    tableList[i] = [];\n  }\n\n  //масивчик с ячейками\n\n  let tableElements = [];\n\n  // пока не работает\n\n  const [hui, setHui] = useState();\n}\n_s(Main, \"ERgckDy6A3cYTlp9kbQI2eRizg4=\");\n_c = Main;\nconst setFocus = object => {\n  setHui(object.id);\n};\n\n//шаблон ячейки\nvar cell = \"<input type='text' class='cell'></input>\";\ncell = cell.repeat(props.height * props.width);\n\n//заголовки столбцов\n\nlet ColumnHead = \"<div class='column-head'></div>\";\nlet HeadRow = ColumnHead.repeat(props.height);\nlet NumberCell = \"<div class='number-cell'></div>\";\n\n// поиск ячеек\nwindow.onload = function () {\n  let alo = document.getElementById(\"table\");\n  alo.insertAdjacentHTML('afterbegin', HeadRow);\n  let Head = document.querySelectorAll('.column-head');\n  for (let i = 0; i < props.width - 1; i++) {\n    if (i >= al.length) {\n      Head.item(i + 1).innerHTML = al[~~(i / al.length)] + al[i % al.length];\n    } else Head.item(i + 1).innerHTML = al[i];\n  }\n  tableElements = document.querySelectorAll('input');\n  for (let i = 0; i < props.height; i++) {\n    tableElements.item(i * props.width + 3).insertAdjacentHTML('beforebegin', NumberCell);\n  }\n  let numbers = document.querySelectorAll('.number-cell');\n  for (let i = 0; i < props.height; i++) {\n    numbers.item(i).innerHTML = i + 1;\n    tableElements.forEach(object => {\n      object.onClick = setFocus(object);\n    });\n  }\n\n  //html фрагментик\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"table\",\n      dangerouslySetInnerHTML: {\n        __html: cell\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","props","_s","al","indexConvert","tableIndex","normIndex","includes","parseInt","indexOf","length","toString","slice","indexTabler","tableList","i","width","tableElements","hui","setHui","_c","setFocus","object","id","cell","repeat","height","ColumnHead","HeadRow","NumberCell","window","onload","alo","document","getElementById","insertAdjacentHTML","Head","querySelectorAll","item","innerHTML","numbers","forEach","onClick","children","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","$RefreshReg$"],"sources":["/home/the-goose/pivo2/my-react-app/src/Main.js"],"sourcesContent":["import React, {useState} from 'react'\nfunction Main(props){\n\t\n\t\n\t// алфавит  для букавок\n\n\tconst al = ['А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ж', 'З', 'И', 'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У', 'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ы', 'Э', 'Ю', 'Я'];\n\n\n\t// из индекса таблицы(типо \"Б8\") делает масивчик с индексами этой ячейки в массиве tableElements(типо \"[2, 8]\")\n\t\n\tfunction indexConvert(tableIndex){\n\t\tlet normIndex = ['0', '0'];\t\n\t\tif(al.includes(tableIndex[1])){\n\t\t\tif(al.includes(tableIndex[2])){\n\t\t\t\tnormIndex[0] = ((parseInt(al.indexOf(tableIndex[0])) + 1)*(al.length * al.length) + (parseInt(al.indexOf(tableIndex[1])) + 1)*al.length + (parseInt(al.indexOf(tableIndex[2])))).toString();\n\t\t\t\tnormIndex[1] = (parseInt(tableIndex.slice(3))).toString();\n\t\t\t\treturn(normIndex);\n\t\t\t}\n\t\t\tnormIndex[0] = ((parseInt(al.indexOf(tableIndex[0])) +1) * al.length + (parseInt(al.indexOf(tableIndex[1] + 1)))).toString();\n\t\t\tnormIndex[1] = (parseInt(tableIndex.slice(2))).toString();\n\n\t\t\treturn(normIndex);\n\t\t}\n\t\tnormIndex[0] = (parseInt(al.indexOf(tableIndex[0])) +1).toString();\n\t\tnormIndex[1] = (parseInt(tableIndex.slice(1))).toString();\n\t\treturn(normIndex);\n\t}\n\t\n\n\t// из нормального массивчика с индексами делает табличный формат, как предыдушая функция, только наоборот короче\n\t\n\tfunction indexTabler(normIndex){\n\t\tlet tableIndex = \"\";\n\t\tif(normIndex[0] > al.length * al.length){\n\t\t\ttableIndex= (~~(al[parseInt(normIndex[0]) / (al.length * al.length) - 1])).toString() + (~~(al[parseInt(normIndex[0]) % (al.length * al.length) / al.length - 1])).toString() + (al[parseInt(normIndex[0]) % (al.length * al.length) % al.length - 1]).toString() + normIndex[1];\n\t\t\treturn(tableIndex);\n\t\t}\n\t\tif(normIndex[0] > al.length){\n\t\t\ttableIndex = (~~(al[parseInt(normIndex[0]) / al.length - 1])).toString() + (al[parseInt(normIndex[0]) % al.length - 1]).toString() + normIndex[1];\n\t\t\treturn(tableIndex);\n\t\t}\n\t\ttableIndex = al[parseInt(normIndex[0]) - 1] + normIndex[1];\n\t\treturn(tableIndex);\n\t}\n\n\t//пока не уверен в нужности этого \n\tlet tableList = [];  \n\tfor(let i=0; i<props.width; i++){\n\t\ttableList[i]= [];\n\t}\n\n\n\t//масивчик с ячейками\n\t\n\tlet tableElements = [];\n\n\t// пока не работает\n\t\n\tconst [hui, setHui] = useState();\n\t}\n\tconst setFocus = (object) => {\n\t\tsetHui(object.id);\n\t}\n\n\n\n\t//шаблон ячейки\n\tvar cell = \"<input type='text' class='cell'></input>\";\n\tcell = cell.repeat(props.height * props.width);\n\t\n\n\t//заголовки столбцов\n\t\n\tlet ColumnHead = \"<div class='column-head'></div>\";\n\tlet HeadRow = ColumnHead.repeat(props.height); \n\n\n\tlet NumberCell = \"<div class='number-cell'></div>\";\n\n\n\t// поиск ячеек\n\twindow.onload = function(){\n\t\tlet alo = document.getElementById(\"table\");\n\t\talo.insertAdjacentHTML('afterbegin', HeadRow);\n\t\tlet Head = document.querySelectorAll('.column-head')\n\n\t\tfor(let i = 0; i<props.width -1; i++){\n\t\t\tif(i >= al.length){\n\t\t\t\tHead.item(i+1).innerHTML = al[(~~(i / al.length))] + al[i%al.length];\n\t\t\t}else Head.item(i+1).innerHTML = al[i];\t\n\t\t}\n\n\t\ttableElements = document.querySelectorAll('input');\n\t\tfor(let i = 0; i<props.height; i++){\n\t\t\ttableElements.item(i*props.width + 3).insertAdjacentHTML('beforebegin', NumberCell);\n\t\t}\n\t\tlet numbers = document.querySelectorAll('.number-cell');\n\t\tfor(let i = 0; i< props.height; i++){\n\t\t\tnumbers.item(i).innerHTML=i+1;\n\t\t\ttableElements.forEach((object) => {\n\t\t\t\tobject.onClick = setFocus(object);\n\t\t\t})\n\t\t\t\n\t\t\n\t\n\t} \t \n\n\t//html фрагментик\n\treturn(\n\t\t<>\n\t\t\t<div id=\"table\"\tdangerouslySetInnerHTML={{__html: cell}}></div>\n\t\t</>\n\t)\n}\nexport default Main;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}